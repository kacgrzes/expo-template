import { Search, X } from "lucide-react-native";
import { TextInput, TextInputProps, useTextInputRef } from "../TextInput";
import { Pressable } from "react-native";
import { useCallback, useState } from "react";
import Animated, { ZoomIn, ZoomOut } from "react-native-reanimated";

type SearchBarProps = TextInputProps;

/**
 * # SearchBar
 *
 * @component
 *
 * @description A component that was generated by Plop
 *
 * @example
 *
 * ```tsx
 * <SearchBar />
 * ```
 */
export function SearchBar({ onChangeText, ...props }: SearchBarProps) {
  const [value, setValue] = useState("");

  const handleChangeText = useCallback(
    (text: string) => {
      setValue(text);
      onChangeText?.(text);
    },
    [onChangeText],
  );

  const handleClear = useCallback(() => {
    setValue("");
  }, []);

  return (
    <TextInput
      {...props}
      left={
        <Animated.View
          style={{
            alignItems: "center",
            aspectRatio: 1,
            height: 39,
            justifyContent: "center",
          }}>
          <Search size={24} />
        </Animated.View>
      }
      value={value}
      onChangeText={handleChangeText}
      right={
        value !== "" ? (
          <Animated.View
            entering={ZoomIn.duration(300)}
            exiting={ZoomOut.duration(300)}
            style={{
              alignItems: "center",
              aspectRatio: 1,
              height: 39,
              justifyContent: "center",
            }}>
            <Pressable
              onPress={handleClear}
              style={{
                width: 24,
                height: 24,
                borderRadius: 24,
                backgroundColor: "lightgrey",
                justifyContent: "center",
                alignItems: "center",
              }}>
              <X size={14} />
            </Pressable>
          </Animated.View>
        ) : null
      }
    />
  );
}
